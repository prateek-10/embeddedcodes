;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   Tue Jan 16 2024
; Processor: AT89C52
; Compiler:  ASEM-51 (Proteus)
;====================================================================

$NOMOD51
$INCLUDE (80C52.MCU)

;====================================================================
; DEFINITIONS
;====================================================================
ADop equ P0 ;Port 0 as ADC output
ALE equ P1.2 ; Port 1.2 as ALE for ADC
SOC equ P1.3 ; Port 1.3 as Start conversion (SC) for ADC 
EOC equ P3.3 ; external interrupt 0
DAip equ P2 ; Port 2 as DAC input
Exedge equ TCON.2 ; setting external interrupt 1 as edge
OE equ P3.0
;====================================================================
; VARIABLES
;====================================================================
IEvalue equ 84h ;Enabling interrupts globally and external interrupt 1 
T2modval equ 02h ;to set as up programmable clock output and T2OE enable
RCAP_L equ 0FEh ;lower byte of count value for 640kHz clock out at T2 pin with 11.059MHz clock 
RCAP_H equ 0FFh ;higher byte of count value
;====================================================================
; RESET and INTERRUPT VECTORS
;====================================================================
; Reset Vector 
org 0000h
jmp Start
org 0013h ; For external interrupt 1
sjmp READ_ADC_ISR
;====================================================================
; CODE SEGMENT
;====================================================================
Start:
mov RCAP2H, #RCAP_H ;higher byte of count value for 640kHz clock out at T2 pin with 11.059MHz
mov RCAP2L, #RCAP_L ;lower byte of count value
mov T2MOD , #T2modval ;to set as up programmable clock output and T2OE 
clr T2CON.0 ;setting timer 2 in 16bit Autoreload mode
clr T2CON.1 ;In timer mode
setb TR2 ;Start the timer
mov IE, #IEvalue ;to enable external interrupt 1
mov ADop , #0FFh ;Configure P0 as an input port for recieving data of ADC
mov DAip , #00h ;Configure P2 as an output port for sending data to DAC
setb Exedge ;setting external interrupt 1 as edge trigger

setb ALE ;Set ALE to start conversion and selecting channel 1 input
setb SOC ;Set SC to start the conversion of ADC
clr ALE
clr SOC
Loop:
jmp Loop

READ_ADC_ISR:
Push ACC
push PSW
setb OE
;set Output Enable to take the data
mov A, ADop
setb ALE
setb SOC
clr ALE
clr SOC
mov DAip, A
pop PSW
pop ACC
reti
;===========================================================
      END
